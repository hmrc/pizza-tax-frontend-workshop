# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.modules.enabled += "FrontendModule"

# Custom error handler
play.http.errorHandler = "uk.gov.hmrc.pizzatax.controllers.ErrorHandler"

appName = "pizza-tax-frontend"

play.http.router = prod.Routes

play.filters.headers.contentSecurityPolicy= "block-all-mixed-content; default-src 'self' localhost:12345 localhost:9032; script-src 'unsafe-inline' 'self' localhost:12345 localhost:9032 www.googletagmanager.com tagmanager.google.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' localhost:12345 localhost:9032 tagmanager.google.com https://fonts.googleapis.com; font-src 'self' localhost:12345 data:; form-action 'self' localhost:9570 https://ssl.gstatic.com www.gstatic.com https://fonts.gstatic.com https://fonts.googleapis.com *.amazonaws.com *.upscan.tax.service.gov.uk; frame-ancestors 'none'; child-src 'none'; object-src 'none'; img-src 'self' localhost:12345 localhost:9032 https://ssl.gstatic.com www.googletagmanager.com www.gstatic.com www.google-analytics.com data:;frame-src 'self' www.googletagmanager.com;connect-src 'self' localhost:12345 localhost:9570 *.amazonaws.com www.googletagmanager.com www.google-analytics.com tagmanager.google.com *.upscan.tax.service.gov.uk;"

play.i18n.langs = ["en", "cy"]

controllers {

  uk.gov.hmrc.pizzatax.controllers.PizzaTaxJourneyController {
    needsAuditing = true
    needsLogging = true
  }
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = true
      legacy = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token = N/A
  host = auto
}

contact-frontend.host = "http://localhost:9250"
contact-frontend.serviceId = "pizzatax"

reportAProblemPartialUrl = ${contact-frontend.host}"ajax?service="${appName}
reportAProblemNonJSUrl = ${contact-frontend.host}"nonjs?service="${appName}

feedback-frontend {
  host = "http://localhost:9514"
  url = "/feedback"
  formIdentifier = "/pizzatax"
}

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }

mongodb {
  uri = "mongodb://localhost:27017/pizza-tax-frontend?rm.monitorRefreshMS=1000&rm.failover=default"
  session.expiration = 1 hour
}

host = "http://localhost:12345"

run.mode = "Dev"

authorisedServiceName = "HMRC-FOO"
authorisedIdentifierKey = "Foo"

json.encryption.key = "UrI5kMAs7ewjByGBXD2+5+v3GZdCzutjTe07g37xc2M="

it.helpdesk.url = "https://intranet.prod.dop.corp.hmrc.gov.uk/page/how-do-i/get-help-it-phones-and-data/it-help/it-helpdesk/get-help-it-problem"

urls {
  callback.external = "http://localhost:12345"
  signOut = "http://localhost:9553/bas-gateway/sign-out-without-state"
  researchBanner = "https://signup.take-part-in-research.service.gov.uk/?utm_campaign=SSP&utm_source=Other&utm_medium=other&t=HMRC&id=252"
}

gtm.container = main
gtm.containerId = GTM-P39VTVL

session{
  timeoutSeconds = 900
  countdownInSeconds = 120
}

features {
}

# enable this flag to trace changes of the internal state of the journey
# keep disabled on production and staging
trace.fsm = true
